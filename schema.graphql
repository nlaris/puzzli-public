"""
Autogenerated input type of CreateGameForDate
"""
input CreateGameForDateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: GameInput!
}

"""
Input for fetching/creating the game of the day
"""
input GameInput {
  date: String!
}

"""
Output for fetching/creating the game of the day
"""
type GameOutput {
  date: String!
  errors: [String!]
  numSolutions: Int
  success: Boolean!
  tiles: [TileOutput!]
}

type Mutation {
  """
  Create game for a date
  """
  createGameForDate(
    """
    Parameters for CreateGameForDate
    """
    input: CreateGameForDateInput!
  ): Boolean!

  """
  Submit a user's game
  """
  submitUserGame(
    """
    Parameters for SubmitUserGame
    """
    input: SubmitUserGameInput!
  ): UserSubmissionOutput
}

type Query {
  """
  Fetch game of the day
  """
  gameOfTheDay(input: GameInput!): GameOutput
}

"""
Autogenerated input type of SubmitUserGame
"""
input SubmitUserGameInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: UserSubmissionInput!
}

"""
Tile to be used in user submission
"""
input TileInput {
  pattern: String!
  rotation: Int!
}

"""
A tile to be used in a game
"""
type TileOutput {
  adjustedPattern: String!
  id: ID!
  pattern: String!
  rotation: Int!
  solutionIndex: Int!
}

"""
User submission
"""
input UserSubmissionInput {
  date: String!
  elapsedTime: Int!
  tiles: [TileInput!]!
  userId: String!
}

"""
User submission output
"""
type UserSubmissionOutput {
  errors: [String!]
  solved: Boolean
  streak: Int
  success: Boolean!
}
